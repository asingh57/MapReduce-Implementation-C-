syntax = "proto3";

package masterworker;

    //utility for master to query its workers
service worker{
    //get health of worker "heartbeating"
    rpc getHealth(masterInfo) returns (workerStatus){}
  //worker requests a job using this (passes its own info to the master)
	rpc setJob (workerJob) returns (workerStatus) {}
    //gets results from job
    rpc jobDoneResults(workerJob) returns (jobResultsInfo) {}
}


message keyValuePair{
    string key=1;
    string value=2;
}

message jobResultsInfo{
    repeated keyValuePair keysAndValues=1;
}

message masterInfo{
    string ipAddress=1;
}

message mapFilePortion{
    string mapFilePath=1;//singular map file input path for mapper job
    int32 startIdxMapper=2;//start idx for mapper job
    int32 size=3; //end idx for mapper job
}


//message that defines a job
message workerJob {    
    repeated string filesPathListReducer=1;//list of reduce files for reducer job
    string reducerOutputPath=2;
	repeated mapFilePortion fileportions=3;
    int32 mapFileSplitCount=4;
    enum jobTypeEnum {
        MAPPER=0;
        REDUCER=1;
    }
    jobTypeEnum jobType=5;//define if the job is a mapper or reducer
    string userID =6;//user id for job
    int32 jobID=7; //unique job id assigned to the specific task for the specific worker
    
}

//message that defines a worker's basic info
message workerInfo{
    string workerip=1;
}

//message with worker health
message workerStatus{
    enum Status {
            BUSY=0;
            FREE=1;
            JOB_DONE=2;
    }
    Status status=1;
}

